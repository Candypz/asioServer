// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: addressbook.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "addressbook.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Secret_Get_Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Secret_Get_Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* helloworld_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  helloworld_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_addressbook_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_addressbook_2eproto() {
  protobuf_AddDesc_addressbook_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "addressbook.proto");
  GOOGLE_CHECK(file != NULL);
  Secret_Get_Req_descriptor_ = file->message_type(0);
  static const int Secret_Get_Req_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Secret_Get_Req, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Secret_Get_Req, msg_req_list_),
  };
  Secret_Get_Req_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Secret_Get_Req_descriptor_,
      Secret_Get_Req::default_instance_,
      Secret_Get_Req_offsets_,
      -1,
      -1,
      -1,
      sizeof(Secret_Get_Req),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Secret_Get_Req, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Secret_Get_Req, _is_default_instance_));
  helloworld_descriptor_ = file->message_type(1);
  static const int helloworld_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(helloworld, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(helloworld, str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(helloworld, opt_),
  };
  helloworld_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      helloworld_descriptor_,
      helloworld::default_instance_,
      helloworld_offsets_,
      -1,
      -1,
      -1,
      sizeof(helloworld),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(helloworld, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(helloworld, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_addressbook_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Secret_Get_Req_descriptor_, &Secret_Get_Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      helloworld_descriptor_, &helloworld::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_addressbook_2eproto() {
  delete Secret_Get_Req::default_instance_;
  delete Secret_Get_Req_reflection_;
  delete helloworld::default_instance_;
  delete helloworld_reflection_;
}

void protobuf_AddDesc_addressbook_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_addressbook_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021addressbook.proto\"D\n\016Secret_Get_Req\022\017\n"
    "\007version\030\001 \001(\r\022!\n\014msg_req_list\030\002 \001(\0132\013.h"
    "elloworld\"2\n\nhelloworld\022\n\n\002id\030\001 \001(\005\022\013\n\003s"
    "tr\030\002 \001(\t\022\013\n\003opt\030\003 \001(\005b\006proto3", 149);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "addressbook.proto", &protobuf_RegisterTypes);
  Secret_Get_Req::default_instance_ = new Secret_Get_Req();
  helloworld::default_instance_ = new helloworld();
  Secret_Get_Req::default_instance_->InitAsDefaultInstance();
  helloworld::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_addressbook_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_addressbook_2eproto {
  StaticDescriptorInitializer_addressbook_2eproto() {
    protobuf_AddDesc_addressbook_2eproto();
  }
} static_descriptor_initializer_addressbook_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Secret_Get_Req::kVersionFieldNumber;
const int Secret_Get_Req::kMsgReqListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Secret_Get_Req::Secret_Get_Req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Secret_Get_Req)
}

void Secret_Get_Req::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  msg_req_list_ = const_cast< ::helloworld*>(&::helloworld::default_instance());
}

Secret_Get_Req::Secret_Get_Req(const Secret_Get_Req& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Secret_Get_Req)
}

void Secret_Get_Req::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  version_ = 0u;
  msg_req_list_ = NULL;
}

Secret_Get_Req::~Secret_Get_Req() {
  // @@protoc_insertion_point(destructor:Secret_Get_Req)
  SharedDtor();
}

void Secret_Get_Req::SharedDtor() {
  if (this != default_instance_) {
    delete msg_req_list_;
  }
}

void Secret_Get_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Secret_Get_Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Secret_Get_Req_descriptor_;
}

const Secret_Get_Req& Secret_Get_Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_addressbook_2eproto();
  return *default_instance_;
}

Secret_Get_Req* Secret_Get_Req::default_instance_ = NULL;

Secret_Get_Req* Secret_Get_Req::New(::google::protobuf::Arena* arena) const {
  Secret_Get_Req* n = new Secret_Get_Req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Secret_Get_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:Secret_Get_Req)
  version_ = 0u;
  if (GetArenaNoVirtual() == NULL && msg_req_list_ != NULL) delete msg_req_list_;
  msg_req_list_ = NULL;
}

bool Secret_Get_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Secret_Get_Req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg_req_list;
        break;
      }

      // optional .helloworld msg_req_list = 2;
      case 2: {
        if (tag == 18) {
         parse_msg_req_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_req_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Secret_Get_Req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Secret_Get_Req)
  return false;
#undef DO_
}

void Secret_Get_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Secret_Get_Req)
  // optional uint32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional .helloworld msg_req_list = 2;
  if (this->has_msg_req_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->msg_req_list_, output);
  }

  // @@protoc_insertion_point(serialize_end:Secret_Get_Req)
}

::google::protobuf::uint8* Secret_Get_Req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Secret_Get_Req)
  // optional uint32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional .helloworld msg_req_list = 2;
  if (this->has_msg_req_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->msg_req_list_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Secret_Get_Req)
  return target;
}

int Secret_Get_Req::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Secret_Get_Req)
  int total_size = 0;

  // optional uint32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // optional .helloworld msg_req_list = 2;
  if (this->has_msg_req_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_req_list_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Secret_Get_Req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Secret_Get_Req)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Secret_Get_Req* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Secret_Get_Req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Secret_Get_Req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Secret_Get_Req)
    MergeFrom(*source);
  }
}

void Secret_Get_Req::MergeFrom(const Secret_Get_Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Secret_Get_Req)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.has_msg_req_list()) {
    mutable_msg_req_list()->::helloworld::MergeFrom(from.msg_req_list());
  }
}

void Secret_Get_Req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Secret_Get_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Secret_Get_Req::CopyFrom(const Secret_Get_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Secret_Get_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Secret_Get_Req::IsInitialized() const {

  return true;
}

void Secret_Get_Req::Swap(Secret_Get_Req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Secret_Get_Req::InternalSwap(Secret_Get_Req* other) {
  std::swap(version_, other->version_);
  std::swap(msg_req_list_, other->msg_req_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Secret_Get_Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Secret_Get_Req_descriptor_;
  metadata.reflection = Secret_Get_Req_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Secret_Get_Req

// optional uint32 version = 1;
void Secret_Get_Req::clear_version() {
  version_ = 0u;
}
 ::google::protobuf::uint32 Secret_Get_Req::version() const {
  // @@protoc_insertion_point(field_get:Secret_Get_Req.version)
  return version_;
}
 void Secret_Get_Req::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:Secret_Get_Req.version)
}

// optional .helloworld msg_req_list = 2;
bool Secret_Get_Req::has_msg_req_list() const {
  return !_is_default_instance_ && msg_req_list_ != NULL;
}
void Secret_Get_Req::clear_msg_req_list() {
  if (GetArenaNoVirtual() == NULL && msg_req_list_ != NULL) delete msg_req_list_;
  msg_req_list_ = NULL;
}
const ::helloworld& Secret_Get_Req::msg_req_list() const {
  // @@protoc_insertion_point(field_get:Secret_Get_Req.msg_req_list)
  return msg_req_list_ != NULL ? *msg_req_list_ : *default_instance_->msg_req_list_;
}
::helloworld* Secret_Get_Req::mutable_msg_req_list() {
  
  if (msg_req_list_ == NULL) {
    msg_req_list_ = new ::helloworld;
  }
  // @@protoc_insertion_point(field_mutable:Secret_Get_Req.msg_req_list)
  return msg_req_list_;
}
::helloworld* Secret_Get_Req::release_msg_req_list() {
  // @@protoc_insertion_point(field_release:Secret_Get_Req.msg_req_list)
  
  ::helloworld* temp = msg_req_list_;
  msg_req_list_ = NULL;
  return temp;
}
void Secret_Get_Req::set_allocated_msg_req_list(::helloworld* msg_req_list) {
  delete msg_req_list_;
  msg_req_list_ = msg_req_list;
  if (msg_req_list) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Secret_Get_Req.msg_req_list)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int helloworld::kIdFieldNumber;
const int helloworld::kStrFieldNumber;
const int helloworld::kOptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

helloworld::helloworld()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld)
}

void helloworld::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

helloworld::helloworld(const helloworld& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld)
}

void helloworld::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opt_ = 0;
}

helloworld::~helloworld() {
  // @@protoc_insertion_point(destructor:helloworld)
  SharedDtor();
}

void helloworld::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void helloworld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* helloworld::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return helloworld_descriptor_;
}

const helloworld& helloworld::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_addressbook_2eproto();
  return *default_instance_;
}

helloworld* helloworld::default_instance_ = NULL;

helloworld* helloworld::New(::google::protobuf::Arena* arena) const {
  helloworld* n = new helloworld;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void helloworld::Clear() {
// @@protoc_insertion_point(message_clear_start:helloworld)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(helloworld, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<helloworld*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, opt_);
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool helloworld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_str;
        break;
      }

      // optional string str = 2;
      case 2: {
        if (tag == 18) {
         parse_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "helloworld.str"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_opt;
        break;
      }

      // optional int32 opt = 3;
      case 3: {
        if (tag == 24) {
         parse_opt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld)
  return false;
#undef DO_
}

void helloworld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string str = 2;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "helloworld.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str(), output);
  }

  // optional int32 opt = 3;
  if (this->opt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->opt(), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld)
}

::google::protobuf::uint8* helloworld::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string str = 2;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "helloworld.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str(), target);
  }

  // optional int32 opt = 3;
  if (this->opt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->opt(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld)
  return target;
}

int helloworld::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:helloworld)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional string str = 2;
  if (this->str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());
  }

  // optional int32 opt = 3;
  if (this->opt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->opt());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void helloworld::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:helloworld)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const helloworld* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const helloworld>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:helloworld)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:helloworld)
    MergeFrom(*source);
  }
}

void helloworld::MergeFrom(const helloworld& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:helloworld)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.str().size() > 0) {

    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  if (from.opt() != 0) {
    set_opt(from.opt());
  }
}

void helloworld::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:helloworld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void helloworld::CopyFrom(const helloworld& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:helloworld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool helloworld::IsInitialized() const {

  return true;
}

void helloworld::Swap(helloworld* other) {
  if (other == this) return;
  InternalSwap(other);
}
void helloworld::InternalSwap(helloworld* other) {
  std::swap(id_, other->id_);
  str_.Swap(&other->str_);
  std::swap(opt_, other->opt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata helloworld::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = helloworld_descriptor_;
  metadata.reflection = helloworld_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// helloworld

// optional int32 id = 1;
void helloworld::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 helloworld::id() const {
  // @@protoc_insertion_point(field_get:helloworld.id)
  return id_;
}
 void helloworld::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:helloworld.id)
}

// optional string str = 2;
void helloworld::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& helloworld::str() const {
  // @@protoc_insertion_point(field_get:helloworld.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void helloworld::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.str)
}
 void helloworld::set_str(const char* value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.str)
}
 void helloworld::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.str)
}
 ::std::string* helloworld::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* helloworld::release_str() {
  // @@protoc_insertion_point(field_release:helloworld.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void helloworld::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:helloworld.str)
}

// optional int32 opt = 3;
void helloworld::clear_opt() {
  opt_ = 0;
}
 ::google::protobuf::int32 helloworld::opt() const {
  // @@protoc_insertion_point(field_get:helloworld.opt)
  return opt_;
}
 void helloworld::set_opt(::google::protobuf::int32 value) {
  
  opt_ = value;
  // @@protoc_insertion_point(field_set:helloworld.opt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
